import controller from './ualCalendarMonthBody.controller';

class ualCalendarMonthBodyDirective {
  /*@ngInject*/
  constructor() {

    this.require = ['^^ualCalendar', '^^ualCalendarMonth', 'ualCalendarMonthBody'];
    this.scope = {
      offset: '=mdMonthOffset'
    };
    this.controller = controller;
    this.controllerAs = 'mdMonthBodyCtrl';
    this.bindToController = true;
  }

  link(scope, element, attrs, controllers) {
    var calendarCtrl = controllers[0];
    var monthCtrl = controllers[1];
    var monthBodyCtrl = controllers[2];

    monthBodyCtrl.calendarCtrl = calendarCtrl;
    monthBodyCtrl.monthCtrl = monthCtrl;
    monthBodyCtrl.generateContent();

    // The virtual-repeat re-uses the same DOM elements, so there are only a limited number
    // of repeated items that are linked, and then those elements have their bindings updataed.
    // Since the months are not generated by bindings, we simply regenerate the entire thing
    // when the binding (offset) changes.
    scope.$watch(function() { return monthBodyCtrl.offset; }, function(offset, oldOffset) {
      if (offset != oldOffset) {
        monthBodyCtrl.generateContent();
      }
    });

    var label = monthBodyCtrl.$element;
  }
}

export default ualCalendarMonthBodyDirective;
